name: continuous-integration

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Setup PostgreSQL
        uses: Harmon758/postgresql-action@v1.0.0
        with:
          # Version of PostgreSQL to use
          postgresql version: 10
          # POSTGRES_DB - name for the default database that is created
          postgresql db: filestorage 
          # POSTGRES_USER - create the specified user with superuser power
          postgresql user: postchain 
          # POSTGRES_PASSWORD - superuser password
          postgresql password: postchain

      # Build and deploy the Filehub
      - name: Download Postchain and Rell binaries
        run: ./download-binaries.sh
        working-directory: filehub/rell
      - name: Build Filehub
        run: ./build.sh
        working-directory: filehub/rell
      - name: Run Filehub
        run: ./run-dev-node.sh &
        working-directory: filehub/rell
      
      # Build and deploy the Filechain
      - name: Download Postchain and Rell Binaries 
        run: ./download-binaries.sh
        working-directory: filechain/rell
      - name: Add Filehub BRID to run.xml
        run: sed -i "s/FILEHUB_BRID/$(cat ../../filehub/rell/target/blockchains/1/brid.txt)/g" run.xml
        working-directory: filechain/rell
      - name: Build Filechain
        run: ./build.sh
        working-directory: filechain/rell
      - name: Run Filechain
        run: ./run-dev-node.sh &
        working-directory: filechain/rell

      # Build File Storage Client (fs-client)
      - name: Install dependencies for fs-client
        run: npm install
        working-directory: client
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Build fs-client
        run: npm run build
        working-directory: client
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      # Run test client
      - name: Install dependencies
        run: npm install
        working-directory: test
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Run tests
        run: npm run silent-test
        working-directory: test
