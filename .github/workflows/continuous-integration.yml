name: continuous-integration

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Build Filehub image
        run: ./build-image.sh
        working-directory: filehub

      - name: Build Filechain image
        run: ./build-image.sh
        working-directory: filechain

      - name: Start Postgres
        run: docker-compose up -d postgres
        working-directory: test

      - name: Start Filehub
        run: docker-compose up -d filehub
        working-directory: test

      - name: Sleep for 15 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '15s'

      - name: Output Filehubs logs to verify it started correctly
        run: docker logs filehub

      - name: Save Filehub BRID to .env
        run: ./env.sh
        working-directory: test

      - name: Start Filechains
        run: docker-compose up -d
        working-directory: test

      - name: Sleep for 15 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '15s'

      - name: Save Filechain BRIDs to .env
        run: ./add-filechain-to-env.sh
        working-directory: test

      - name: Output env
        run: cat .env
        working-directory: test

      # Build File Storage Client (fs-client)
      - name: Install dependencies for fs-client
        run: npm install
        working-directory: client
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Build fs-client
        run: npm run build
        working-directory: client
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      # Run test client
      - name: Install dependencies
        run: npm install
        working-directory: test
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Run CHROMIA Filechain tests
        run: npm run silent-test-ci
        working-directory: test
        continue-on-error: false

      - name: Run COMMUNITY Filechain tests
        run: npm run silent-test-community-ci
        working-directory: test
        continue-on-error: false

      - name: Run CHROMIA migration
        run: npm run silent-test-migration
        working-directory: test
        continue-on-error: false

      - name: Run COMMUNITY migration
        run: npm run silent-test-community-migration
        working-directory: test
        continue-on-error: false

      - name: Populate ADMIN KEY into healthchecker .env
        run: echo "ADMIN_PRIVATE_KEY=3132333435363738393031323334353637383930313233343536373839303131" > .env
        working-directory: healthchecker

      - name: Populate NODE URL into healthchecker .env
        run: echo "NODE_URL=http://localhost:7740" >> .env
        working-directory: healthchecker

      - name: Populate FILEHUB_BRID into healthchecker .env
        run: echo "FILEHUB_BRID=$(docker exec -i filehub cat /usr/src/filehub/rell/target/blockchains/0/brid.txt)" >> .env
        working-directory: healthchecker

      - name: Build healthchecker
        run: npm install && npm run build
        working-directory: healthchecker

      - name: Run healthcheck where everything is expected to be online
        run: npm run health-check
        working-directory: healthchecker

      - name: Bring Filechain offline
        run: docker-compose stop community-migration-filechain
        working-directory: test

      - name: Run healthcheck where Filechain is expected to be offline
        run: npm run health-check
        working-directory: healthchecker

      - name: Bring Filechain back online
        run: docker-compose start community-migration-filechain
        working-directory: test

      - name: Run healthcheck where Filechain is expected to be online again
        run: npm run health-check
        working-directory: healthchecker

      - name: Verify filechain reported offline
        run: npm run verify-filechain-reported-offline
        working-directory: test

      - name: Output Filehub log
        run: docker logs filehub

      - name: Output CHROMIA Filechain log
        run: docker logs chromia-filechain

      - name: Output COMMUNITY Filechain log
        run: docker logs community-filechain

      - name: Output old COMMUNITY Filechain log
        run: docker logs community-filechain

      - name: Output new COMMUNITY Filechain log
        run: docker logs community-migration-filechain

      - name: Docker login
        uses: Azure/docker-login@v1
        with:
          username: snieking
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Docker push filehub
        run: docker push snieking/filehub

      - name: Docker push filechain
        run: docker push snieking/filechain