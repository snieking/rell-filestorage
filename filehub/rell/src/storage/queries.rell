import util;

query get_file_location(descriptor_id: byte_array, name): byte_array {
	val account = util.get_account_by_descriptor_id(descriptor_id);
	return file@{ name, account } ( .filechain.brid );
}

query get_file_chunks(descriptor_id: byte_array, name) {
	val account = util.get_account_by_descriptor_id(descriptor_id);
	return file_chunk@*{ .file.name == name, .file.account == account } ( hash = .chunk.hash, @sort idx = .idx );
}

query get_file_names(descriptor_id: byte_array) {
	val account = util.get_account_by_descriptor_id(descriptor_id);
	return file@*{ account } ( .name );
}

query get_allocated_bytes(descriptor_id: byte_array) {
	val account = util.get_account_by_descriptor_id(descriptor_id);
	return _get_allocated_bytes(account);
}