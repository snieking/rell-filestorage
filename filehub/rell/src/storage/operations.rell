import ft3_acc: lib.ft3.account;
import ft3_core: lib.ft3.core;
import util;

operation allocate_chunk(descriptor_id: byte_array, path: text, hash: byte_array) {
	val account = util.get_account_by_descriptor_id(descriptor_id);
	ft3_acc.require_auth(account, descriptor_id, ["A"]);
	
	var chunk = chunk@?{ hash };
	
	if (chunk == null) {
	    val filechain = filechain@{}; // choose a blockchain
		
		// Check if user has sufficient funds & take funds
		val asset_id = ("CHR", chain_context.blockchain_rid).hash();
		val token_cost = 1;
		
		ft3_core.deduct_balance(account, ft3_core.asset@{ .id == asset_id }, token_cost);
		
		chunk = create chunk(hash, filechain);
	}
	
	create chunk_meta(account, chunk, path);
}