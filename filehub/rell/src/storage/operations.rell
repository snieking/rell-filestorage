import ft3_acc: lib.ft3.account;
import util;
import billing;

operation allocate_chunk(descriptor_id: byte_array, path: text, hash: byte_array) {
	val account = util.get_account_by_descriptor_id(descriptor_id);
	ft3_acc.require_auth(account, descriptor_id, ["A"]);
	
	var chunk = chunk@?{ hash };
	
	if (chunk == null) {
	    val filechain = filechain@{}; // choose a blockchain
		
		// Check if user has active voucher
		val current_timestamp = op_context.last_block_time;
		
		val active_invoice = billing.voucher@?{ account, .timestamp > current_timestamp } (
			@sort_desc .timestamp,
			.plan,
			.asset,
			.amount
		) limit 1;
		
		if (active_invoice != null) {
			chunk = create chunk(hash, filechain);
			create chunk_meta(account, chunk, path);
		}
			
	} else {
		create chunk_meta(account, chunk, path);
	}
}