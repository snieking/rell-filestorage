import billing;
import storage;

query list_filechain_applications() {
	return filechain_application@*{} (
		brid = .brid,
		node_url = .node_url,
		source_code = .source_code
	);
}

query list_community_filechain_locations() {
	return storage.active_filechain@*{
		.plan == billing.plan.COMMUNITY
	} ( brid = .filechain.brid, location = .filechain.location );
}

query get_offline_community_filechain_reports(since: timestamp) {
	return offline_filechain_report@*{
		.offline_at >= since
	} (
		brid = .filechain.brid,
		offline_at = .offline_at,
		online_at = .online_at
	);
}